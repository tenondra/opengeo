version: "3"

services:
  database:
    image: postgres:13-alpine
    hostname: database
    volumes:
      - type: volume
        source: opengeo-database
        target: /var/lib/postgres/data
    environment:
      POSTGRES_USER: opengeo
      POSTGRES_PASSWORD: opengeodummypassword
      POSTGRES_DB: opengeo
    networks:
      - opengeo-net
    restart: unless-stopped

  backend:
    build: .
    image: ${PROJECT_REGISTRY}opengeo-backend:${CI_COMMIT_SHORT_SHA:-latest}
    command: >
      bash -c "ls -al &&
        python manage.py migrate &&
        uvicorn --host 0.0.0.0 --reload opengeo-project.asgi:application"
    volumes:
      - type: ${VOLUME_TYPE:-bind}
        source: ${VOLUME:-./config/config.production.yml}
        target: ${VOLUME_TARGET:-/app/config/config.yml}
        read_only: true
    depends_on:
      - database
    restart: unless-stopped
    networks:
      - opengeo-net
    labels:
      - "traefik.enable=true"
      - "compose.stack=opengeo"
      # middleware definitions
      - "traefik.http.middlewares.default-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.default-redirect.redirectscheme.permanent=true"
      - "traefik.http.services.opengeo-api.loadbalancer.server.port=8000"
      # https
      - "traefik.http.routers.opengeo-api.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.opengeo-api.entrypoints=websecure"
      - "traefik.http.routers.opengeo-api.tls=true"
      # http -> https
      - "traefik.http.routers.opengeo-api-redirect.entrypoints=web"
      - "traefik.http.routers.opengeo-api-redirect.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.opengeo-api-redirect.middlewares=default-redirect"

  frontend:
    build: 
        context: ./opengeo-frontend
        dockerfile: ./Dockerfile.production
    image: ${PROJECT_REGISTRY}opengeo-frontend:${FRONTEND_COMMIT_SHORT_SHA:-latest}
    ports: 
        - 127.0.0.1:3000:80/tcp
    volumes:
      - type: ${VOLUME_TYPE:-bind}
        source: ${VOLUME:-./opengeo-frontend/docker}
        target: ${VOLUME_TARGET:-/app}
        read_only: true
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - opengeo-net
    labels:
      - "traefik.enable=true"
      - "compose.stack=opengeo"
      # middleware definitions
      - "traefik.http.middlewares.default-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.default-redirect.redirectscheme.permanent=true"
      - "traefik.http.middlewares.strip-app-prefix.stripprefixregex.regex=/app"
      - "traefik.http.services.opengeo.loadbalancer.server.port=80"
      # https
      - "traefik.http.routers.opengeo.rule=hostregexp(`{host:.+}`) && (PathPrefix(`/app`) || Path(`/`))"
      - "traefik.http.routers.opengeo.entrypoints=websecure"
      - "traefik.http.routers.opengeo.tls=true"
      - "traefik.http.routers.opengeo.middlewares=strip-app-prefix"
      # http -> https
      - "traefik.http.routers.opengeo-redirect.rule=hostregexp(`{host:.+}`) && (PathPrefix(`/app`) || Path(`/`))"
      - "traefik.http.routers.opengeo-redirect.entrypoints=web"
      - "traefik.http.routers.opengeo-redirect.middlewares=default-redirect"

  proxy:
    image: traefik:v2.4
    command:
      - "--log.level=INFO"
      - "--providers.docker"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.address=:80"
      - "--providers.docker.constraints=Label(`compose.stack`,`opengeo`)"
      - "--api.dashboard=true"
      - "--api.insecure=true"
    ports:
      - 0.0.0.0:80:80/tcp
      - 0.0.0.0:443:443/tcp
      - 127.0.0.1:8080:8080/tcp
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: yes
    restart: unless-stopped
    networks:
      - opengeo-net

networks:
  opengeo-net:

volumes:
  opengeo-database:
